/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.entity.PatientEntity;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.github.sarxos.webcam.WebcamUtils;
import com.repositories.PatientRepository;

import com.util.Constant;
import com.util.EmailValidator;
import com.util.MailUtils;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import org.springframework.context.ApplicationContext;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Controller;


@Controller(value = "PatiendRegistration")
public class PatiendRegistration extends javax.swing.JFrame {

    private JavaMailSender emailSender;
    private PatientRepository patientRepository;
    private JFrame PatiendRegistration;

    /**
     * Creates new form PatiendRegistration
     */
    public PatiendRegistration(
            PatientRepository patientRepository, ApplicationContext applicationContext) {
        this.patientRepository = applicationContext.getBean(PatientRepository.class);
        initComponents();
        setLocationRelativeTo(null);
        loadAll();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        cmdGender = new javax.swing.JComboBox<>();
        txtAge = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        savePatientRegBtn = new javax.swing.JButton();
        txtConcern = new javax.swing.JTextField();
        patientIDLb = new javax.swing.JLabel();
        nameLb = new javax.swing.JLabel();
        ageLb = new javax.swing.JLabel();
        genderLb = new javax.swing.JLabel();
        cityLb = new javax.swing.JLabel();
        stateLb = new javax.swing.JLabel();
        zipcodeLb = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        openCameraBtn = new javax.swing.JButton();
        stateCombobox = new javax.swing.JComboBox<>();
        emailLb = new javax.swing.JLabel();
        cityCombox = new javax.swing.JComboBox<>();
        txtemail = new javax.swing.JTextField();
        captureBtn = new javax.swing.JButton();
        zipCombobox = new javax.swing.JComboBox<>();
        selectfileBtn = new javax.swing.JButton();
        imageLb = new javax.swing.JLabel();
        txtimage = new javax.swing.JTextField();
        lbluserimg = new javax.swing.JLabel();
        addressLb = new javax.swing.JLabel();
        concernLb1 = new javax.swing.JLabel();
        mainImage1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Patient Registration");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 320, 40));

        txtname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnameKeyTyped(evt);
            }
        });
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, 340, 35));

        txtId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 340, 35));

        cmdGender.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmdGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MALE", "FEMALE", "OTHER" }));
        getContentPane().add(cmdGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 340, 35));

        txtAge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 340, 35));

        txtAddress.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 370, 340, 35));

        savePatientRegBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        savePatientRegBtn.setText("save");
        savePatientRegBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePatientRegBtnActionPerformed(evt);
            }
        });
        getContentPane().add(savePatientRegBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 730, 340, 40));

        txtConcern.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtConcern.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConcernKeyTyped(evt);
            }
        });
        getContentPane().add(txtConcern, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 620, 340, 35));

        patientIDLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        patientIDLb.setText("PATIENT ID");
        getContentPane().add(patientIDLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 340, 30));

        nameLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameLb.setText("NAME");
        getContentPane().add(nameLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 340, 30));

        ageLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ageLb.setText("AGE");
        getContentPane().add(ageLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, 340, 30));

        genderLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genderLb.setText("GENDER");
        getContentPane().add(genderLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 340, 30));

        cityLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cityLb.setText("CITY");
        getContentPane().add(cityLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 340, 30));

        stateLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stateLb.setText("STATE");
        getContentPane().add(stateLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, 210, 30));

        zipcodeLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        zipcodeLb.setText("ZIP CODE");
        getContentPane().add(zipcodeLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 540, 340, 30));

        closeBtn.setBackground(new java.awt.Color(255, 0, 0));
        closeBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        closeBtn.setText("CLOSE");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 550, 200, 40));

        openCameraBtn.setText("open camera");
        openCameraBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCameraBtnActionPerformed(evt);
            }
        });
        getContentPane().add(openCameraBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 240, -1, -1));

        stateCombobox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stateCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MASSACHUSETTS", "NEWYORK" }));
        getContentPane().add(stateCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 510, 340, 30));

        emailLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailLb.setText("EMAIL");
        getContentPane().add(emailLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 660, 100, -1));

        cityCombox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cityCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BOSTON", "NEWYORK" }));
        getContentPane().add(cityCombox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 340, 30));

        txtemail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 680, 340, 30));

        captureBtn.setText("capture");
        captureBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureBtnActionPerformed(evt);
            }
        });
        getContentPane().add(captureBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 240, -1, -1));

        zipCombobox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        zipCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "02115", "02116", "10017" }));
        getContentPane().add(zipCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 570, 340, -1));

        selectfileBtn.setText("SELECT FILE");
        selectfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectfileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(selectfileBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 370, 120, 20));

        imageLb.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        imageLb.setForeground(new java.awt.Color(51, 51, 51));
        imageLb.setText("Image");
        getContentPane().add(imageLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 310, 80, 20));

        txtimage.setEnabled(false);
        getContentPane().add(txtimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 340, 320, 20));

        lbluserimg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(lbluserimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 80, 230, 140));

        addressLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addressLb.setText("ADDRESS");
        getContentPane().add(addressLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, 340, 30));

        concernLb1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        concernLb1.setText("CONCERN");
        getContentPane().add(concernLb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 590, 340, 30));

        mainImage1.setBackground(new java.awt.Color(41, 46, 64));
        mainImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage1.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage1.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage1.setOpaque(true);
        mainImage1.setPreferredSize(new java.awt.Dimension(728, 410));
        getContentPane().add(mainImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -50, 1280, 930));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void savePatientRegBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePatientRegBtnActionPerformed

         EmailValidator emailValidator = new EmailValidator();
       
        
        if (!emailValidator.validate(txtemail.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Invalid Email !!");

        } 
        else{
            
    
        
        
//        appController.sendEmail();
        savePatient();
        loadAll();
         String txtEmail=txtemail.getText();
         
         //System.out.println(ConstData.currentUser.getEmail());
         //MailUtils.sendEmail(ConstData.currentUser.getEmail(), "Patient Registration Successfull!!", ConstData.currentUser.getUsername() +" "+"Patient Registration Successfull");
        //System.out.println(ConstData.currentUser);
         MailUtils.sendEmail(txtEmail, "Patient Registration Successfull!!", txtname.getText()+""+"Patient Registration Successfull");
        JOptionPane.showMessageDialog(PatiendRegistration, "Patient Registered in System");
         txtname.setText(" ");
       // txtZipCode.setText(" ");
        txtId.setText(" ");
        txtAge.setText(" ");
        txtAddress.setText(" ");
       // txtCity.setText(" ");
       // txtState.setText(" ");
        txtConcern.setText(" ");
        txtemail.setText(" ");
    }

    }//GEN-LAST:event_savePatientRegBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtnActionPerformed

    private void captureBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureBtnActionPerformed
        try {
            Webcam webcam = Webcam.getDefault();
            webcam.open();

            // get image
            BufferedImage image = webcam.getImage();
            File file = new File("test.png");
            // save image to PNG file
            ImageIO.write(image, "PNG", file);
            WebcamUtils.capture(webcam, "selfie.jpg");
        } catch (IOException ex) {
            Logger.getLogger(PatiendRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_captureBtnActionPerformed

    private void openCameraBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCameraBtnActionPerformed
        Webcam webcam = Webcam.getDefault();
        webcam.setViewSize(WebcamResolution.VGA.getSize());

        WebcamPanel panel = new WebcamPanel(webcam);
        panel.setImageSizeDisplayed(true);

        JFrame window = new JFrame("Webcam");
        window.add(panel);
        window.setResizable(true);
        window.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        window.pack();
        window.setLocationRelativeTo(null);
        window.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_openCameraBtnActionPerformed

    private void selectfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectfileBtnActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView());
        jfc.setCurrentDirectory(new File(System.getProperty("user.home")));
        jfc.setDialogTitle("Select image");
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "png");
        jfc.addChoosableFileFilter(filter);

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            System.out.println(jfc.getSelectedFile().getAbsolutePath());
            txtimage.setText(jfc.getSelectedFile().getAbsolutePath());
            lbluserimg.setIcon(setImage(txtimage.getText()));

        }
    }//GEN-LAST:event_selectfileBtnActionPerformed

    private void txtnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtname.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(PatiendRegistration, "UserName must be a String value");
            txtname.setEditable(false);

        }

    }//GEN-LAST:event_txtnameKeyTyped

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || Character.isISOControl(c)) {
            txtAge.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(PatiendRegistration, "Age must be a Integer value");
            txtAge.setEditable(false);
        }

    }//GEN-LAST:event_txtAgeKeyTyped

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtAddress.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(PatiendRegistration, "Address must be a String value");
            txtAddress.setEditable(false);

        }

    }//GEN-LAST:event_txtAddressKeyTyped

    private void txtConcernKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConcernKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtConcern.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(PatiendRegistration, "Concern must be a String value");
            txtConcern.setEditable(false);

        }

    }//GEN-LAST:event_txtConcernKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatiendRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatiendRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatiendRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatiendRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLb;
    private javax.swing.JLabel ageLb;
    private javax.swing.JButton captureBtn;
    private javax.swing.JComboBox<String> cityCombox;
    private javax.swing.JLabel cityLb;
    private javax.swing.JButton closeBtn;
    private javax.swing.JComboBox<String> cmdGender;
    private javax.swing.JLabel concernLb1;
    private javax.swing.JLabel emailLb;
    private javax.swing.JLabel genderLb;
    private javax.swing.JLabel imageLb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbluserimg;
    private javax.swing.JLabel mainImage1;
    private javax.swing.JLabel nameLb;
    private javax.swing.JButton openCameraBtn;
    private javax.swing.JLabel patientIDLb;
    private javax.swing.JButton savePatientRegBtn;
    private javax.swing.JButton selectfileBtn;
    private javax.swing.JComboBox<String> stateCombobox;
    private javax.swing.JLabel stateLb;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtConcern;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtimage;
    private javax.swing.JTextField txtname;
    private javax.swing.JComboBox<String> zipCombobox;
    private javax.swing.JLabel zipcodeLb;
    // End of variables declaration//GEN-END:variables
  public ImageIcon setImage(String path) {
        ImageIcon myimage = new ImageIcon(path);
        Image image = myimage.getImage();
        Image scaledInstance = image.getScaledInstance(lbluserimg.getWidth(), lbluserimg.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imagee = new ImageIcon(scaledInstance);
        return imagee;
    }

    private void savePatient() {
        try {
            PatientEntity patientEntity = new PatientEntity();

            String id = txtId.getText();
            String name = txtname.getText();
            String age = txtAge.getText();
            String gender = cmdGender.getSelectedItem().toString();
            String address = txtAddress.getText();
            //String city = txtCity.getText();
             String city = cityCombox.getSelectedItem().toString();
            String state = stateCombobox.getSelectedItem().toString();
          //  String state = txtState.getText();
            //String zip = txtZipCode.getText();
            String zip = zipCombobox.getSelectedItem().toString();
            String concern = txtConcern.getText();
           // String txtEmail="ajitp4292@gmail.com";

            //set data in to the object class
            patientEntity.setId(null);
            patientEntity.setName(name);
            if(Constant.currentUser == null){
                patientEntity.setEmail(" ");
            }
            else{
           // patientEntity.setEmail(ConstData.currentUser.getEmail());
            patientEntity.setEmail(txtemail.getText());
            
            } 
            patientEntity.setAge(Integer.parseInt(age));
            patientEntity.setGender(gender);
            patientEntity.setAddress(address);
            patientEntity.setCity(city);
            patientEntity.setState(state);
            patientEntity.setZipCode(Integer.parseInt(zip));
            patientEntity.setConcern(concern);
            patientEntity.setStatus("PENDING");

            //save patient from PatientRepository class
            patientRepository.save(patientEntity);
            //JOptionPane.showMessageDialog(this, "Saved");


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed");
        }
    }

    public int loadAll() {
        Integer lastId = patientRepository.getLastId();
        if (lastId != null) {
            lastId = lastId + 1;
        } else {
            lastId = 1;
        }
        txtId.setText(Integer.toString(lastId));
        return lastId;
    }
}
