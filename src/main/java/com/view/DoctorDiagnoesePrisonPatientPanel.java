/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.entity.PrisonPatientDiagnoseEntity;
import com.entity.PrisonPatientEntity;
import com.entity.PrisonPatientVitalEntity;
import com.repositories.PatientRepositoryPrison;
import com.repositories.PrisonPatientDiagnoseRepository;
import com.repositories.PrisonPatientVitalRepository;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Controller;

 
@Controller(value = "DoctorDiagnoesePrisonPatientPanel")
public class DoctorDiagnoesePrisonPatientPanel extends javax.swing.JPanel {

    PrisonPatientDiagnoseRepository patientDiagnoseEntity;
    PrisonPatientVitalRepository patientVitalRepository;
    PatientRepositoryPrison patientRepository;

    /**
     * Creates new form DoctorDiagnoesePatientPanel
     */
    public DoctorDiagnoesePrisonPatientPanel(PrisonPatientDiagnoseRepository patientDiagnoseEntity,
            PatientRepositoryPrison patientRepository,
            PrisonPatientVitalRepository patientVitalRepository,
            ApplicationContext applicationContext) {
        this.patientDiagnoseEntity = applicationContext.getBean(PrisonPatientDiagnoseRepository.class);
        this.patientVitalRepository = applicationContext.getBean(PrisonPatientVitalRepository.class);
        this.patientRepository = applicationContext.getBean(PatientRepositoryPrison.class);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        getmyPatientBtn = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        patientIdLb = new javax.swing.JLabel();
        patientNameLb = new javax.swing.JLabel();
        doctorCommentsLb = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        txtComments = new javax.swing.JTextField();
        sendLegalBtn = new javax.swing.JButton();
        mainImage1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1050, 700));
        setMinimumSize(new java.awt.Dimension(1050, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT ID", "NAME", "AGE", "BP", "WEIGHT", "PHQ-9 SCORE", "GAD-7 SCORE", "STATUS"
            }
        ));
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPatient);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1010, 410));

        getmyPatientBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getmyPatientBtn.setText("GET MY PATIENTS");
        getmyPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getmyPatientBtnActionPerformed(evt);
            }
        });
        add(getmyPatientBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 170, 30));

        txtName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 230, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("ENTER YOUR NAME");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 150, 30));

        patientIdLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        patientIdLb.setText("PATIENT ID");
        add(patientIdLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, 160, 35));

        patientNameLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        patientNameLb.setText("PATIENT NAME");
        add(patientNameLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 160, 35));

        doctorCommentsLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        doctorCommentsLb.setText("DOCTOR COMMENTS");
        add(doctorCommentsLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 560, 160, 35));

        txtPatientId.setEditable(false);
        txtPatientId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(txtPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 480, 380, 35));

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 520, 380, 35));

        txtComments.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtComments.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommentsKeyTyped(evt);
            }
        });
        add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, 380, 35));

        sendLegalBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        sendLegalBtn.setText("SEND TO LEGAL ADVISOR");
        sendLegalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendLegalBtnActionPerformed(evt);
            }
        });
        add(sendLegalBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 630, 210, 40));

        mainImage1.setBackground(new java.awt.Color(41, 46, 64));
        mainImage1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage1.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage1.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage1.setOpaque(true);
        mainImage1.setPreferredSize(new java.awt.Dimension(728, 410));
        add(mainImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void getmyPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getmyPatientBtnActionPerformed
        if (txtName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter your name to get patients");
        } else {
            loadPatients();
        }
    }//GEN-LAST:event_getmyPatientBtnActionPerformed

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        if (model.getRowCount() != 0) {
            String id = model.getValueAt(tblPatient.getSelectedRow(), 0).toString();
            String name = model.getValueAt(tblPatient.getSelectedRow(), 1).toString();
            String drName = txtName.getText();
            txtPatientId.setText(id);
            txtPatientName.setText(name);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientMouseClicked

    private void sendLegalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendLegalBtnActionPerformed
        PrisonPatientEntity finddetailById = patientRepository.finddetailById(Integer.parseInt(txtPatientId.getText()));
        finddetailById.setStatus("Sent to Legal Advisor");
        patientRepository.save(finddetailById);
        saveDiagnose();
         JOptionPane.showMessageDialog(this, "Prisoner Patient Detail sent to LegalConsideration!!");
    }//GEN-LAST:event_sendLegalBtnActionPerformed

    private void txtCommentsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommentsKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtComments.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Comments must be a String value");
            txtComments.setEditable(false);

        }
    }//GEN-LAST:event_txtCommentsKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel doctorCommentsLb;
    private javax.swing.JButton getmyPatientBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mainImage1;
    private javax.swing.JLabel patientIdLb;
    private javax.swing.JLabel patientNameLb;
    private javax.swing.JButton sendLegalBtn;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables

    private void loadPatients() {
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        List<PrisonPatientEntity> findAll = patientRepository.findAll();
        for (PrisonPatientEntity entity : findAll) {
            if (entity.getStatus().equals("Doctor Assigned")) {
                PrisonPatientVitalEntity finddetailById = patientVitalRepository.finddetailById(entity.getId());
                if (null != finddetailById) {
                    Object[] data = {entity.getId(),
                        entity.getName(), entity.getAge(),
                        finddetailById.getBp(),
                        finddetailById.getWeight(),
                        finddetailById.getPhq(),
                        finddetailById.getGad(),
                        entity.getStatus()};

                    model.addRow(data);
                }
            }

        }
    }

    private void saveDiagnose() {
         PrisonPatientDiagnoseEntity diagnoseEntity = new  PrisonPatientDiagnoseEntity();
        diagnoseEntity.setId(null);
        diagnoseEntity.setComments(txtComments.getText());
        diagnoseEntity.setName(txtPatientName.getText());
        diagnoseEntity.setPatientId(Integer.parseInt(txtPatientId.getText()));
       patientDiagnoseEntity.save(diagnoseEntity);

    }

}
