/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.entity.PatientDiagnoseEntity;
import com.entity.PatientEntity;
import com.entity.PatientVitalEntity;
import com.repositories.PatientDiagnoseRepository;
import com.repositories.PatientRepository;
import com.repositories.PatientVitalRepository;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Controller;

@Controller(value = "DoctorRehabPanel")
public class DoctorRehabPanel extends javax.swing.JPanel {

    PatientDiagnoseRepository diagnoseRepository;
    PatientVitalRepository patientVitalRepository;
    PatientRepository patientRepository;

    /**
     * Creates new form DoctorDiagnoesePatientPanel
     */
    public DoctorRehabPanel(PatientDiagnoseRepository diagnoseRepository,
            PatientRepository patientRepository,
            PatientVitalRepository patientVitalRepository,
            ApplicationContext applicationContext) {
        this.diagnoseRepository = applicationContext.getBean(PatientDiagnoseRepository.class);
        this.patientVitalRepository = applicationContext.getBean(PatientVitalRepository.class);
        this.patientRepository = applicationContext.getBean(PatientRepository.class);
        initComponents();
        loadPatients();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        patientIdLb = new javax.swing.JLabel();
        patientName = new javax.swing.JLabel();
        doctorCommentsLb = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        txtComments = new javax.swing.JTextField();
        readytoDisBtn = new javax.swing.JButton();
        reloadBtn = new javax.swing.JButton();
        mainImage1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPatient1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPatientId1 = new javax.swing.JTextField();
        txtPatientName1 = new javax.swing.JTextField();
        txtComments1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        mainImage2 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1050, 700));
        setMinimumSize(new java.awt.Dimension(1050, 700));
        setPreferredSize(new java.awt.Dimension(1050, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT ID", "NAME", "PRESCRIPTION", "CASE SERVERITY", "REHAB REQUIRED", "DOCTOR COMMENTS", "PATIENT STATUS"
            }
        ));
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPatient);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1010, 410));

        patientIdLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        patientIdLb.setText("PATIENT ID");
        add(patientIdLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, 170, 35));

        patientName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        patientName.setText("PATIENT NAME");
        add(patientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, 170, 35));

        doctorCommentsLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        doctorCommentsLb.setText("DOCTOR COMMENTS");
        add(doctorCommentsLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 590, 170, 35));

        txtPatientId.setEditable(false);
        txtPatientId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(txtPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 500, 270, 35));

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 540, 270, 35));

        txtComments.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtComments.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommentsKeyTyped(evt);
            }
        });
        add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 590, 270, 35));

        readytoDisBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        readytoDisBtn.setText("READY TO DISCHARGE");
        readytoDisBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readytoDisBtnActionPerformed(evt);
            }
        });
        add(readytoDisBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 640, 270, 40));

        reloadBtn.setText("Reload");
        reloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtnActionPerformed(evt);
            }
        });
        add(reloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 470, -1, -1));

        mainImage1.setBackground(new java.awt.Color(41, 46, 64));
        mainImage1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage1.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage1.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage1.setOpaque(true);
        mainImage1.setPreferredSize(new java.awt.Dimension(728, 410));
        add(mainImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 700));

        jPanel1.setMaximumSize(new java.awt.Dimension(1050, 700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatient1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT ID", "NAME", "PRESCRIPTION", "CASE SERVERITY", "REHAB REQUIRED", "DOCTOR COMMENTS", "PATIENT STATUS"
            }
        ));
        tblPatient1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatient1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPatient1);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 1010, 410));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("PATIENT ID");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 170, 35));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("PATIENT NAME");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 520, 170, 35));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("DOCTOR COMMENTS");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 570, 170, 35));

        txtPatientId1.setEditable(false);
        txtPatientId1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(txtPatientId1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 270, 35));

        txtPatientName1.setEditable(false);
        txtPatientName1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(txtPatientName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 270, 35));

        txtComments1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(txtComments1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 570, 270, 35));

        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setText("READY TO DISCHARGE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 620, 270, 40));

        mainImage2.setBackground(new java.awt.Color(41, 46, 64));
        mainImage2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage2.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage2.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage2.setOpaque(true);
        mainImage2.setPreferredSize(new java.awt.Dimension(728, 410));
        jPanel1.add(mainImage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 700));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        if (model.getRowCount() != 0) {
            String patientid = model.getValueAt(tblPatient.getSelectedRow(), 0).toString();
            String name = model.getValueAt(tblPatient.getSelectedRow(), 1).toString();
            
            txtPatientId.setText(patientid);
            txtPatientName.setText(name);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientMouseClicked

    private void readytoDisBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readytoDisBtnActionPerformed
        PatientEntity finddetailById = patientRepository.finddetailById(Integer.parseInt(txtPatientId.getText()));
        finddetailById.setStatus("Ready to Discharge");

        patientRepository.save(finddetailById);
        saveDiagnose();
         JOptionPane.showMessageDialog(this, "Patient Ready to Discharge!!");
    }//GEN-LAST:event_readytoDisBtnActionPerformed

    private void tblPatient1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatient1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatient1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void reloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadBtnActionPerformed
        loadPatients();        // TODO add your handling code here:
    }//GEN-LAST:event_reloadBtnActionPerformed

    private void txtCommentsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommentsKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtComments.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Comments must be a String value");
           txtComments.setEditable(false);

        }
    }//GEN-LAST:event_txtCommentsKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel doctorCommentsLb;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel mainImage1;
    private javax.swing.JLabel mainImage2;
    private javax.swing.JLabel patientIdLb;
    private javax.swing.JLabel patientName;
    private javax.swing.JButton readytoDisBtn;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTable tblPatient1;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtComments1;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientId1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    // End of variables declaration//GEN-END:variables

    private void loadPatients() {
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        List<PatientEntity> findAll = patientRepository.findAll();
        for (PatientEntity entity : findAll) {
            if (entity.getStatus().equals("Addmitted to rehab")) {
                //PatientVitalEntity finddetailById = patientVitalRepository.finddetailById(Integer.toString(entity.getId()));
                 PatientVitalEntity finddetailById = patientVitalRepository.finddetailById(entity.getId());
                //PatientDiagnoseEntity diagnoseEntity = diagnoseRepository.finddetailById(Integer.toString(entity.getId()));
                PatientDiagnoseEntity diagnoseEntity = diagnoseRepository.finddetailById(entity.getId());
                if (null != finddetailById) {
                    Object[] data = {entity.getId(),
                        entity.getName(), diagnoseEntity.getPrescription(),
                        diagnoseEntity.getCaseSer(),
                        diagnoseEntity.getSetRehab(),
                        diagnoseEntity.getComments(),
                        entity.getStatus()};

                    model.addRow(data);
                }
            }

        }
    }

    private void saveDiagnose() {
        PatientDiagnoseEntity diagnoseEntity = new PatientDiagnoseEntity();
        diagnoseEntity.setId(null);
        diagnoseEntity.setComments(txtComments.getText());
        diagnoseEntity.setName(txtPatientName.getText());
        diagnoseEntity.setPatientId(Integer.parseInt(txtPatientId.getText()));
        diagnoseRepository.save(diagnoseEntity);

    }

}
