/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.entity.PrisonPatientDiagnoseEntity;
import com.entity.PrisonPatientEntity;
import com.entity.PrisonPatientVitalEntity;
import com.repositories.PatientRepositoryPrison;
import com.repositories.PrisonPatientDiagnoseRepository;
import com.repositories.PrisonPatientVitalRepository;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Controller;

@Controller(value = "PolicePage")
public class PolicePage extends javax.swing.JFrame {

    PrisonPatientDiagnoseRepository diagnoseRepository;
    PrisonPatientVitalRepository patientVitalRepository;
    PatientRepositoryPrison patientRepository;

    /**
     * Creates new form RehabPage
     */
    public PolicePage(PrisonPatientDiagnoseRepository diagnoseRepository,
            PatientRepositoryPrison patientRepository,
            PrisonPatientVitalRepository patientVitalRepository,
            ApplicationContext applicationContext) {
        this.diagnoseRepository = applicationContext.getBean(PrisonPatientDiagnoseRepository.class);
        this.patientVitalRepository = applicationContext.getBean(PrisonPatientVitalRepository.class);
        this.patientRepository = applicationContext.getBean(PatientRepositoryPrison.class);
        initComponents();
        setLocationRelativeTo(null);
        loadPatients();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        txtName = new javax.swing.JTextField();
        senttoPhsycBtn = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        txtComments = new javax.swing.JTextField();
        nameLb = new javax.swing.JLabel();
        commentslb = new javax.swing.JLabel();
        idLb = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        reloadBtn = new javax.swing.JButton();
        mainImage1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT ID", "NAME", "PRESCRIPTION", "PATIENT STATUS", "Doctor Comments", "Legal Advisor Comments"
            }
        ));
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPatient);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1240, 330));

        txtName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 480, 280, 50));

        senttoPhsycBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        senttoPhsycBtn.setText("Sent to Psych Ward");
        senttoPhsycBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senttoPhsycBtnActionPerformed(evt);
            }
        });
        getContentPane().add(senttoPhsycBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 630, 280, 60));

        txtId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 280, 50));

        txtComments.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtComments.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommentsKeyTyped(evt);
            }
        });
        getContentPane().add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 540, 280, 50));

        nameLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nameLb.setText("name");
        getContentPane().add(nameLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, 90, 40));

        commentslb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        commentslb.setText("comments");
        getContentPane().add(commentslb, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 550, 90, 40));

        idLb.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        idLb.setText("id");
        getContentPane().add(idLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, 90, 40));

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("CLOSE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, 200, 40));

        reloadBtn.setText("Reload");
        reloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtnActionPerformed(evt);
            }
        });
        getContentPane().add(reloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 410, -1, -1));

        mainImage1.setBackground(new java.awt.Color(41, 46, 64));
        mainImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage1.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage1.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage1.setOpaque(true);
        mainImage1.setPreferredSize(new java.awt.Dimension(728, 410));
        getContentPane().add(mainImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        if (model.getRowCount() != 0) {
            String id = model.getValueAt(tblPatient.getSelectedRow(), 0).toString();
            String name = model.getValueAt(tblPatient.getSelectedRow(), 1).toString();
            txtId.setText(id);
            txtName.setText(name);
        }          // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientMouseClicked

    private void senttoPhsycBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senttoPhsycBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        if (model.getRowCount() != 0) {
            String id = model.getValueAt(tblPatient.getSelectedRow(), 0).toString();
            PrisonPatientEntity finddetailById = patientRepository.finddetailById(Integer.parseInt(id));
            if (null != finddetailById) {
                finddetailById.setStatus("Sent to Psych Ward");
                PrisonPatientDiagnoseEntity finddetailById1 = diagnoseRepository.finddetailById(finddetailById.getId());
                finddetailById1.setPoliceComments(txtComments.getText());
                diagnoseRepository.save(finddetailById1);
                patientRepository.save(finddetailById);
                loadPatients();
                   JOptionPane.showMessageDialog(this, "Shifted Patient to Physcward!!");
            }
        }
    }//GEN-LAST:event_senttoPhsycBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void reloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadBtnActionPerformed
        loadPatients();// TODO add your handling code here:
    }//GEN-LAST:event_reloadBtnActionPerformed

    private void txtCommentsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommentsKeyTyped
        // TODO add your handling code here:
        
         char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtComments.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Comments must be a String value");
            txtComments.setEditable(false);

        }

        
    }//GEN-LAST:event_txtCommentsKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PolicePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PolicePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PolicePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PolicePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel commentslb;
    private javax.swing.JLabel idLb;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mainImage1;
    private javax.swing.JLabel nameLb;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JButton senttoPhsycBtn;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
private void loadPatients() {
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);
        List<PrisonPatientEntity> findAll = patientRepository.findAll();
        for (PrisonPatientEntity entity : findAll) {
            if (entity.getStatus().equals("Sent to Police")) {
                PrisonPatientVitalEntity finddetailById = patientVitalRepository.finddetailById(entity.getId());
                PrisonPatientDiagnoseEntity diagnoseEntity = diagnoseRepository.finddetailById(entity.getId());
                if (null != finddetailById) {
                    Object[] data = {entity.getId(),
                        entity.getName(),
                        diagnoseEntity.getPrescription(),
                        entity.getStatus(),
                        diagnoseEntity.getComments(),
                        diagnoseEntity.getCommelegalAdvisorComments()};

                    model.addRow(data);
                }
            }

        }
    }
}
