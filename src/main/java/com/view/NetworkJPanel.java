/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.entity.Network;
import com.repositories.NetworkRepository;
import com.repositories.PatientRepository;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Controller;

/**
 *
 * @author ajitpatil
 */
@Controller(value = "NetworkJPanel")
public class NetworkJPanel extends javax.swing.JPanel {
private JPanel NetworkJPanel;
    NetworkRepository networkRepository;

    /**
     * Creates new form NetworkJPanel
     */
    public NetworkJPanel(NetworkRepository networkRepository,
            ApplicationContext applicationContext) {
        this.networkRepository = applicationContext.getBean(NetworkRepository.class);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        cityLb = new javax.swing.JLabel();
        stateLb = new javax.swing.JLabel();
        zipcodeTxt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        addbtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        mainImage1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCity.setToolTipText("");
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 230, 35));

        txtState.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtState.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtStateCaretUpdate(evt);
            }
        });
        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStateKeyTyped(evt);
            }
        });
        add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 230, 35));

        txtZipCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyTyped(evt);
            }
        });
        add(txtZipCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 230, 35));

        cityLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cityLb.setText("City");
        add(cityLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 200, 35));

        stateLb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stateLb.setText("State");
        add(stateLb, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 200, 35));

        zipcodeTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        zipcodeTxt.setText("Zipcode");
        add(zipcodeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 220, 35));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "City", "State", "Zipcode"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 12, 710, 590));

        addbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 180, 35));

        UpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UpdateBtn.setText("Update");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });
        add(UpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 180, 35));

        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 180, 35));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, -1, -1));

        jButton1.setText("reload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 610, -1, -1));

        mainImage1.setBackground(new java.awt.Color(41, 46, 64));
        mainImage1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/Mentally Healthy Communities .jpg"))); // NOI18N
        mainImage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(170, 170, 170), 2));
        mainImage1.setMaximumSize(new java.awt.Dimension(728, 410));
        mainImage1.setMinimumSize(new java.awt.Dimension(728, 410));
        mainImage1.setOpaque(true);
        mainImage1.setPreferredSize(new java.awt.Dimension(728, 410));
        add(mainImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        Network network = new Network();
        network.setCity(txtCity.getText());
        network.setState(txtState.getText());
        network.setZipcode(Integer.parseInt(txtZipCode.getText()));
        network.setId(null);
        networkRepository.save(network);
        JOptionPane.showMessageDialog(this, "Network Added");
    }//GEN-LAST:event_addbtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        Network network = new Network();
        network.setCity(txtCity.getText());
        network.setState(txtState.getText());
        network.setZipcode(Integer.parseInt(txtZipCode.getText()));
        network.setId(Integer.parseInt(jLabel1.getText()));
        networkRepository.save(network);
        JOptionPane.showMessageDialog(this, "Network Updated");
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed

        Network finddetailByCity = networkRepository.finddetailByCity(txtCity.getText());
        if (null != finddetailByCity) {
            jLabel1.setText(Integer.toString(finddetailByCity.getId()));
            txtZipCode.setText(Integer.toString(finddetailByCity.getZipcode()));
            txtState.setText(finddetailByCity.getState());
            txtCity.setText(finddetailByCity.getCity());
        } else {
            JOptionPane.showMessageDialog(this, "No Record Found");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadPatients();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        if (model.getRowCount() != 0) {
            String city = model.getValueAt(tbl.getSelectedRow(), 0).toString();
            Network finddetailByCity = networkRepository.finddetailByCity(city);
            if (null != finddetailByCity) {
                jLabel1.setText(Integer.toString(finddetailByCity.getId()));
                txtZipCode.setText(Integer.toString(finddetailByCity.getZipcode()));
                txtState.setText(finddetailByCity.getState());
                txtCity.setText(finddetailByCity.getCity());
            }
        }
    }//GEN-LAST:event_tblMouseClicked

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (!jLabel1.getText().equals("")) {
            networkRepository.deleteById(Integer.parseInt(jLabel1.getText()));
             JOptionPane.showMessageDialog(this, "Network Deleted");
        } else {
            JOptionPane.showMessageDialog(this, "Please search or select record to delete");
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void txtStateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyTyped
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)) {
            //allow only letter,space and Iso control char

            txtState.setEditable(true);
        } else {
            JOptionPane.showMessageDialog(NetworkJPanel, "State must be a String value");
           txtState.setEditable(false);

        }
    }//GEN-LAST:event_txtStateKeyTyped

    private void txtZipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
				if (Character.isDigit(c) || Character.isISOControl(c)) {
					txtZipCode.setEditable(true);
				}
				else {
					JOptionPane.showMessageDialog(NetworkJPanel, "Zipcode must be a Digit");
					txtZipCode.setEditable(false);
				}
        
    }//GEN-LAST:event_txtZipCodeKeyTyped

    private void txtStateCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtStateCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton addbtn;
    private javax.swing.JLabel cityLb;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mainImage1;
    private javax.swing.JLabel stateLb;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JLabel zipcodeTxt;
    // End of variables declaration//GEN-END:variables
private void loadPatients() {
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        List<Network> findAll = networkRepository.findAll();
        for (Network entity : findAll) {

            Object[] data = {entity.getCity(),
                entity.getState(), entity.getZipcode()};
            model.addRow(data);

        }
    }
}
